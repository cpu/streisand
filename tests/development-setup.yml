---
- hosts: localhost
  gather_facts: no
  remote_user: root
  become: yes
  pre_tasks:
    # NOTE(@alimakki): Due to key rotation, we pre-emptivley
    # add the Google linux apt signing key required by some
    # packages
    - name: Install the Google linux apt signing key
      shell: "{{ item }}"
      with_items:
        - "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -"
        - "apt-get clean"
        - "apt-get update"

    - name:
      raw:  sudo apt update && apt install python python-apt aptitude -y

- hosts: localhost
  gather_facts: yes
  remote_user: root
  become: yes
  tasks:
    # If l2tp is enabled we need to build & prepare the Libreswan kernel module
    # on the localhost in order for it to be usable by the container
    - name: Install Libreswan to support L2TP in container
      include_tasks: libreswan-setup.yml
      when: streisand_l2tp_enabled

    # NOTE(@cpu): We use the `command` module with the `add-apt-repository`
    # command here because the `apt_repository` Ansible module at the time of
    # writing will error on the ubuntu-lxc repo in some instances if a mirror is
    # missing 32bit binary builds even though CI uses a 64bit architecture.
    #- name: Install LXC ppa
    #  command: add-apt-repository ppa:ubuntu-lxc/lxd-stable
    - name: Ensure consistent & clean apt state
      shell: "{{ item }}"
      with_items:
        - "apt-get clean"
        - "apt-get update"

    - name: "Remove old LXD from distro"
      apt:
        name: "lxd"
        state: "absent"

    - name: "Install snapd"
      apt:
        name: "snapd"

    - name: "Install LXD snap"
      command: "snap install lxd"

    - name: "Add LXD group"
      group:
        name: "lxd"
        system: "yes"

    - name: "Add ansible_user to LXD group"
      user:
        name: "{{ansible_user}}"
        groups: "lxd"

    - name: "Start lxd"
      command: "snap start lxd"

    - name: "Wait for the LXD socket"
      wait_for:
        path: "/var/snap/lxd/common/lxd/unix.socket"
        state: present
        sleep: 5

    - name: lxd init config
      command: lxd init --auto --storage-backend dir

    - name: lxd create network
      command: lxc network create testbr0

    - name: lxd attach network to default profile
      command: lxc network attach-profile testbr0 default eth0

    - name: Retrieve the Ubuntu Xenial AMD64 LXC image fingerprint
      uri:
        url: https://images.linuxcontainers.org/1.0/images/aliases/ubuntu/xenial/amd64
        return_content: yes
      register: xenial_fingerprint

    - name: Launch streisand container (this will take a while)
      lxd_container:
        name: streisand
        state: started
        url: "unix:/var/snap/lxd/common/lxd/unix.socket"
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: lxd
          # Use the retrieved alias to fetch the image
          alias: "{{ xenial_fingerprint['json']['metadata']['target'] }}"
        profiles: ["default"]
        config:
          security.privileged: "true"
        wait_for_ipv4_addresses: true
        timeout: 300

    - name: List lxc's
      command: lxc list
      register: lxc_list

    - debug:
        var: lxc_list.stdout_lines

    - name: Collect lxc info
      command: lxc info streisand
      register: lxc_info

    - debug:
        var: lxc_info.stdout_lines

    - name: Open the permissions on the lxd socket?
      command: chmod 777 /var/snap/lxd/common/lxd/unix.socket

    - name: check python is installed in container
      delegate_to: streisand
      raw: dpkg -s python
      register: python_install_check
      failed_when: python_install_check.rc not in [0, 1]
      changed_when: false

    - name: install python in container
      delegate_to: streisand
      raw: apt-get install -y python
      when: python_install_check.rc == 1
