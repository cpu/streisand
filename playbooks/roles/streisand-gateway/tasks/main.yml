---
- name: Generate a random Gateway password
  shell: grep -v -P "[\x80-\xFF]" /usr/share/dict/american-english-huge | sed -e "s/'//" | shuf -n 4 | xargs | sed -e 's/ /-/g' > {{ streisand_gateway_password_file }}
  args:
    creates: "{{ streisand_gateway_password_file }}"

- name: Register the Gateway password
  command: cat {{ streisand_gateway_password_file }}
  register: streisand_gateway_password

- name: Install the required package for the htpasswd command
  apt:
    name: apache2-utils

- name: Generate the htpasswd file
  command: htpasswd -b -c {{ streisand_gateway_htpasswd_file }} {{ streisand_gateway_username }} {{ streisand_gateway_password.stdout }}
  args:
    creates: "{{ streisand_gateway_htpasswd_file }}"

- name: Set permissions on the SSL private key and the unhashed Gateway password file
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - "{{ streisand_gateway_password_file }}"

- name: Copy the streisand gateway password file locally
  fetch:
    src: "{{ streisand_gateway_password_file }}"
    dest: "{{ streisand_gateway_password_localpath }}"
    fail_on_missing: yes
    flat: yes

- name: Register MITM mitigation fact (certificate serial number)
  command: openssl x509 -in {{ server_tls_cert }} -noout -serial
  register: ssl_certificate_serial_number

- name: Register more MITM mitigation facts (fingerprints)
  command: openssl x509 -{{ item }} -in {{ server_tls_cert }} -noout -fingerprint
  with_items:
    - sha256
    - sha1
    - md5
  register: ssl_certificate_fingerprints

- name: Copy the CA certificate to the webroot
  copy:
    dest: "{{ streisand_gateway_ca_file }}"
    src: "{{ streisand_ca_cert }}"
    # remote_src true because we are copying a file already on the remote host
    # to another place on the remote host
    remote_src: true
    owner: root
    group: root
    mode: 0644

- name: Generate the virtual host and restart Nginx if it is updated
  template:
    src: vhost.j2
    dest: /etc/nginx/sites-available/streisand
    owner: root
    group: root
    mode: 0644
  notify: Restart Nginx

- name: Enable the virtual host
  file:
    path: /etc/nginx/sites-enabled/streisand
    src: /etc/nginx/sites-available/streisand
    state: link

- name: Convert the CA certificate into the right format for a data uri
  command: base64 --wrap=0 {{ streisand_ca_cert }}
  register: streisand_certificate_data_uri

- name: Generate the Markdown Gateway index, instructions, and firewall information
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "index.md.j2",        dest: "{{ streisand_gateway_markdown_index }}" }
    - { src: "instructions.md.j2", dest: "{{ streisand_gateway_markdown_instructions }}" }
    - { src: "firewall.md.j2",     dest: "{{ streisand_gateway_markdown_firewall_information }}" }

- name: Convert the Markdown Gateway index, instructions, and firewall information into HTML and surround them with the header and footer template
  shell: markdown {{ item.md }} | cat {{ streisand_header_template }} - {{ streisand_footer_template }} > {{ item.html }}
  with_items:
    - { md: "{{ streisand_gateway_markdown_index }}",                html: "{{ streisand_gateway_html_index }}" }
    - { md: "{{ streisand_gateway_markdown_instructions }}",         html: "{{ streisand_gateway_html_instructions }}" }
    - { md: "{{ streisand_gateway_markdown_firewall_information }}", html: "{{ streisand_gateway_html_firewall_information }}" }

- name: Fetch the Gateway HTML instructions and firewall information
  fetch:
    dest: ../{{ streisand_local_directory }}/
    src: "{{ item }}"
    flat: yes
  with_items:
    - "{{ streisand_gateway_html_instructions }}"
    - "{{ streisand_gateway_html_firewall_information }}"

- name: Clean up the temporary Gateway instruction and firewall information files once they have been retrieved
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ streisand_gateway_html_instructions }}"
    - "{{ streisand_gateway_markdown_instructions }}"
    - "{{ streisand_gateway_html_firewall_information }}"
    - "{{ streisand_gateway_markdown_firewall_information }}"

- name: Ensure that all of the files in the Gateway have the proper permissions
  file:
    path: "{{ streisand_gateway_location }}"
    owner: www-data
    group: www-data
    mode: 0750
    state: directory
    recurse: yes

- meta: flush_handlers

- block:
    - name: Success!
      pause:
        prompt: "Server setup is complete. The `{{ streisand_server_name }}.html` instructions file in the generated-docs folder is ready to give to friends, family members, and fellow activists. Press Enter to continue."

    - name: Attempt to open the instructions on Linux (if applicable). Errors in this task are ignored because the `xdg-open` command is not always available.
      local_action: command xdg-open ../{{ streisand_local_directory }}/{{ streisand_server_name }}.html
      ignore_errors: yes
      when: hostvars['127.0.0.1']['ansible_system'] == "Linux"

    - name: Open the instructions on OS X (if applicable)
      local_action: command open ../{{ streisand_local_directory }}/{{ streisand_server_name }}.html
      when: hostvars['127.0.0.1']['ansible_system'] == "Darwin"

  when: noninteractive != "true"
  become: no

